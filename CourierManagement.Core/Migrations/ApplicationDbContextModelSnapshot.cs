// <auto-generated />
using System;
using CourierManagement.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourierManagement.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("CourierManagement.Core.Models.Courier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("Birthdate");

                    b.Property<string>("City");

                    b.Property<string>("Company");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<string>("LastName");

                    b.Property<string>("Pesel")
                        .IsRequired();

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PostalCode");

                    b.HasKey("Id");

                    b.ToTable("Couriers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ul. Jasna 1",
                            Birthdate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Gliwice",
                            EmailAddress = "jan.kowalski@mail.com",
                            FirstName = "Jan",
                            Gender = 1,
                            LastName = "Kowalski",
                            Pesel = "00000000001",
                            PhoneNumber = "123-456-789",
                            PostalCode = "44-100"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ul. Ciemna 2",
                            Birthdate = new DateTime(1980, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Knurów",
                            EmailAddress = "janina.kowalska@mail.com",
                            FirstName = "Janina",
                            Gender = 2,
                            LastName = "Kowalska",
                            Pesel = "000000000002",
                            PhoneNumber = "789-456-123",
                            PostalCode = "44-193"
                        });
                });

            modelBuilder.Entity("CourierManagement.Core.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cost");

                    b.Property<int>("Height");

                    b.Property<bool>("IsFragile");

                    b.Property<int>("Length");

                    b.Property<int>("PaymentType");

                    b.Property<DateTime>("ReceivedDate");

                    b.Property<int>("RecipientId");

                    b.Property<int>("SenderId");

                    b.Property<DateTime>("SentDate");

                    b.Property<int>("Weight");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("Deliveries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 100m,
                            Height = 300,
                            IsFragile = false,
                            Length = 200,
                            PaymentType = 0,
                            ReceivedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecipientId = 1,
                            SenderId = 1,
                            SentDate = new DateTime(2019, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2000,
                            Width = 250
                        },
                        new
                        {
                            Id = 2,
                            Cost = 50m,
                            Height = 200,
                            IsFragile = true,
                            Length = 1000,
                            PaymentType = 1,
                            ReceivedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecipientId = 2,
                            SenderId = 2,
                            SentDate = new DateTime(2019, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 10000,
                            Width = 200
                        });
                });

            modelBuilder.Entity("CourierManagement.Core.Models.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Company");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PostalCode");

                    b.HasKey("Id");

                    b.ToTable("Recipients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ul. Odbiorcza 1",
                            City = "Gliwice",
                            Company = "Firma Krzak",
                            EmailAddress = "pan.odbiorca@mail.com",
                            FirstName = "Pan",
                            Gender = 1,
                            LastName = "Odbiorca",
                            PhoneNumber = "135-246-357",
                            PostalCode = "44-100"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ul. Odbiorcza 2",
                            City = "Gliwice",
                            Company = "Firma Kogucik",
                            EmailAddress = "pani.odbiorczyni@mail.com",
                            FirstName = "Pani",
                            Gender = 2,
                            LastName = "Odbiorczyni",
                            PhoneNumber = "246-357-468",
                            PostalCode = "44-100"
                        });
                });

            modelBuilder.Entity("CourierManagement.Core.Models.Sender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Company");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PostalCode");

                    b.HasKey("Id");

                    b.ToTable("Senders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ul. Nadawcza 1",
                            City = "Gliwice",
                            Company = "Firma Krzak",
                            EmailAddress = "pan.nadawca@mail.com",
                            FirstName = "Pan",
                            Gender = 1,
                            LastName = "Nadawca",
                            PhoneNumber = "135-246-357",
                            PostalCode = "44-100"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ul. Nadawcza 2",
                            City = "Gliwice",
                            Company = "Firma Kogucik",
                            EmailAddress = "pani.nadawczyni@mail.com",
                            FirstName = "Pani",
                            Gender = 2,
                            LastName = "Nadawczyni",
                            PhoneNumber = "246-357-468",
                            PostalCode = "44-100"
                        });
                });

            modelBuilder.Entity("CourierManagement.Core.Models.Delivery", b =>
                {
                    b.HasOne("CourierManagement.Core.Models.Recipient", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CourierManagement.Core.Models.Sender", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
